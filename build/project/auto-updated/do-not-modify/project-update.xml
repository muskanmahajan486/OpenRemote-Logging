<?xml version="1.0" encoding="UTF-8"?>

<!--
  OpenRemote, the Home of the Digital Home.
  Copyright 2008-2014, OpenRemote Inc.

  See the contributors.txt file in the distribution for a
  full listing of individual contributors.

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation; either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program; if not, see <http://www.gnu.org/licenses/>.
-->

<!--
 |  Script for handling the updates of the project template files. It will connect to a
 |  build repository server and check if any of the project template file definitions
 |  have changed.
 |
 |  Author: Juha Lindfors (juha@openremote.org)
 +-->
<project name ="OpenRemote Project Update" basedir = "../../../.." default = "update">

  <!--
   | Load local properties overriding other properties for values that
   | are not intended for general use / commit to version control.
   +-->
  <property file = "local.properties"/>

  <!--
   | Load persistent build properties to configure this build.
   +-->
  <property file = "build.properties"/>

  <!--
   | Load project specific default properties.
   +-->
  <property file = "${project.file.path}/project.properties"/>

  <!--
   | Load all the rest of default properties that have not been overridden by the above
   +-->
  <property file = "${project.file.path}/default.properties"/>


  <!--
   | Initialize preconditions. At minimum the properties 'project.file.path',
   | 'build.repository.uri' and 'project.name' must be available to proceed.
   |
   | First two are in general found in 'build.properties' file unless for
   | some reason have been overridden in 'local.properties' file. The 'project.name'
   | is in general found in 'project.properties' located at 'project.file.path'.
   +-->
  <target name="-init">

    <fail unless = "project.file.path">
      Property 'project.file.path' must be set.
    </fail>

    <fail unless = "build.repository.uri">
      Property 'build.repository.uri' must be set in the build.properties file.
    </fail>

    <fail unless = "project.name">
      Property 'project.name' must be set in the project.properties file.
    </fail>

  </target>


  <!--
   | UPDATE:
   |
   | Downloads project template files from build repository server.
   +-->
  <target name = "update" description = "Updates this project setup" if = "project.file.path">

    <property name = "testng.path"    value = "${project.file.path}/lib/testng-6.8"/>
    <property name = "cobertura.path" value = "${project.file.path}/lib/cobertura-2.0.3"/>

    <mkdir dir = "${java.src.dir}/org/openremote"/>
    <mkdir dir = "${java.test.src.dir}/org/openremote"/>
    <mkdir dir = "${build.lib.dir}"/>

    <echo>
    &gt;&gt; Updating project templates...
    </echo>

    <get dest = "${project.file.path}" usetimestamp = "true">

      <url url = "${build.repository.uri}/project/${project.name}/default.properties"/>
      <url url = "${build.repository.uri}/project/${project.name}/project.properties"/>
      <url url = "${build.repository.uri}/project/${project.name}/project-update.xml"/>
      <url url = "${build.repository.uri}/project/${project.name}/project-template.xml"/>
      <url url = "${build.repository.uri}/project/${project.name}/task-definitions.xml"/>

    </get>

    <get dest = "${basedir}" usetimestamp = "true">

      <url url = "${build.repository.uri}/project/${project.name}/project.sh"/>
      <url url = "${build.repository.uri}/project/${project.name}/build.properties"/>

    </get>


    <echo>
    &gt;&gt; Updating TestNG libraries...
    </echo>

    <mkdir dir = "${testng.path}"/>

    <get dest = "${testng.path}" usetimestamp = "true">

      <url url = "${build.repository.uri}/project/${project.name}/build/lib/testng-6.8/testng-6.8.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/testng-6.8/LICENSE.txt"/>

    </get>


    <echo>
    &gt;&gt; Updating Cobertura libraries...
    </echo>

    <mkdir dir = "${cobertura.path}"/>
    <mkdir dir = "${cobertura.path}/lib"/>

    <get dest = "${cobertura.path}" usetimestamp = "true">

      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/cobertura-2.0.3.jar"/>

    </get>

    <get dest = "${cobertura.path}/lib" usetimestamp = "true">

      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/asm-4.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/asm-analysis-4.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/asm-commons-4.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/asm-tree-4.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/asm-util-4.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/dom4j-1.6.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/icu4j-2.6.1.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/jaxen-1.1-beta-8.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/jdom-1.0.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/jetty-6.1.14.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/jetty-util-6.1.14.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/log4j-1.2.9.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/oro-2.0.8.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/servlet-api-2.5-6.1.14.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/tagsoup-0.9.7.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/xmlParserAPIs-2.6.2.jar"/>
      <url url = "${build.repository.uri}/project/${project.name}/build/lib/cobertura-2.0.3/lib/xom-1.0b3.jar"/>

    </get>

  </target>

</project>
