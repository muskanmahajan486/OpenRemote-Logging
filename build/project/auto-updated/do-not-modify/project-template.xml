<?xml version="1.0" encoding="UTF-8"?>

<!--
  OpenRemote, the Home of the Digital Home.
  Copyright 2008-2014, OpenRemote Inc.

  See the contributors.txt file in the distribution for a
  full listing of individual contributors.

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation; either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program; if not, see <http://www.gnu.org/licenses/>.
-->


<!--
 |  This is the base project template for all OpenRemote projects. It provides default
 |  build targets:
 |
 |    - compile             compiles all Java classes
 |    - unit-test           executes all Java unit tests
 |    - clean               removes all generated files
 |
 |
 |  The main build file which imports this template may extend the functionality by adding
 |  targets to the following extensions points:
 |
 |    -before-compile
 |    -before-unit-test-compile
 |    -before-unit-test
 |
 |  Author: Juha Lindfors
 +-->
<project name = "OpenRemote Project Template" basedir = "."
         xmlns:openremote = "namespace://build.repository.openremote.org/project/tasks">

  <!--
   | Load local properties overriding other properties for values that
   | are not intended for general use / commit to version control.
   +-->
  <property file = "local.properties"/>

  <!--
   | Load persistent build properties to configure this build.
   +-->
  <property file = "build.properties"/>

  <!--
   | Resolve the directory path of an imported build file...
   +-->
  <dirname property = "import.basedir" file = "${ant.file.OpenRemote Project Template}"/>

  <!--
   | Load project specific default properties.
   +-->
  <property file = "${import.basedir}/project.properties"/>

  <!--
   | Load all the rest of default properties that have not been overridden by the above
   +-->
  <property file = "${import.basedir}/default.properties"/>


  <!--
   | Import customized tasks...
   +-->
  <import file = "${import.basedir}/task-definitions.xml" as = "openremote-tasks"/>


  <!--
   | COMPILE:
   |
   | Compiles all Java classes of this project. Public project target.
   +-->
  <target name = "compile" depends = "-before-compile"
          description = "Compiles all project Java classes.">

    <echo>

    -------------------------------------------------------------
      Compiling ${project.name} Java classes...
    -------------------------------------------------------------

    </echo>

    <!-- Make sure we have a target directory for our compiled classes... -->
    <mkdir dir = "${classes.dir}"/>

    <openremote:compile-java/>

  </target>

  <extension-point name = "-before-compile"/>

  <!--
   | Compiles all Java unit test classes of this project.
   +-->
  <target name = "-unit-test-compile" depends = "-before-unit-test-compile">

    <echo>

    -------------------------------------------------------------
      Compiling ${project.name} Java unit tests...
    -------------------------------------------------------------

    </echo>

    <mkdir dir="${test.classes.dir}"/>

    <openremote:compile-java-unit-test/>

  </target>

  <extension-point name = "-before-unit-test-compile" depends = "compile"/>


  <!--
   | UNIT-TEST:
   |
   | Executes all Java unit tests of this project. Public project target.
   +-->
  <target name = "unit-test" depends = "-before-unit-test"
          description = "Executes project Java unit tests">

    <openremote:run-java-unit-test/>

    <makeurl file = "${unit.test.report.dir}" property = "unit.test.report.uri"/>

    <antcall target = "-print-unit-test-report-location"/>

  </target>

  <extension-point name = "-before-unit-test" depends = "-unit-test-compile"/>

  <target name = "-print-unit-test-report-location" if = "java.unit.test.failure">

    <echo>

    UNIT TEST REPORT: ${unit.test.report.uri}/index.html

    </echo>

  </target>


  <!--
   | CLEAN:
   |
   | Deletes all generated files of this project. Public project target.
   +-->
  <target name = "clean" description = "Deletes generated files in this project.">

    <delete dir = "${build.test.dir}"/>
    <delete dir = "${classes.dir}"/>
    <delete dir = "${output.dir}"/>

  </target>

</project>

